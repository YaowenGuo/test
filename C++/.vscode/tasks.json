{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C++Primer build",
            "command": "/usr/bin/clang++",
            "args": [
                "-g",
                "${file}",
                "-std=c++11",
                "-std=c++14",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "make_sure_build_directory"
            ]
        },
        {
            "type": "shell",
            "label": "make_sure_build_directory",
            "command": "/bin/mkdir",
            "args": [
                "-p",
                "${workspaceFolder}/.target/${relativeFileDirname}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "type": "cppbuild",
            "label": "Micro preprocesing",
            "command": "/usr/bin/clang++",
            "args": [
                "-std=c++11",
                "-std=c++14",
                "-P",
                "-E",
                "${file}",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}.processed.${fileExtname}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for clang to preprocesing micor.",
            "dependsOn": [
                "make_sure_build_directory",
                "Clang format"
            ]
        },
        {
            "type": "cppbuild",
            "label": "Clang Format",
            "command": "/usr/local/opt/llvm/bin/clang-format",
            "args": [
                "-style=Google",
                "-i",
                "${file}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for clang to format c++ code with google style.",
            "dependsOn": []
        },
        {
            "type": "cppbuild",
            "label": "C++Primer build",
            "command": "/usr/bin/clang++",
            "args": [
                "-g",
                "${file}",
                "-std=c++11",
                "-std=c++14",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "make_sure_build_directory"
            ]
        }
    ],
    "version": "2.0.0"
}